basePath: /api/
consumes:
- application/json
- text/vnd.yaml
- application/toml
definitions:
  APIError:
    properties:
      details:
        type: object
        x-go-name: Details
      error:
        $ref: '#/definitions/Error'
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/requestContext
  Category:
    properties:
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      project_id:
        type: string
        x-go-name: ProjectID
      title:
        type: string
        x-go-name: Title
      translation_ids:
        items:
          type: string
        type: array
        x-go-name: TranslationIDs
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  CategoryInput:
    properties:
      description:
        maxLength: 8000
        minLength: 3
        type: string
      key:
        maxLength: 100
        minLength: 1
        pattern: ^[^\s]*$
        type: string
      project_id:
        maxLength: 100
        minLength: 1
        type: string
      title:
        maxLength: 400
        minLength: 3
        type: string
    required:
    - key
    - project_id
    - title
    type: object
  CategoryTreeNode:
    properties:
      categories:
        additionalProperties:
          $ref: '#/definitions/CategoryTreeNode'
        type: object
        x-go-name: Categories
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      exists:
        description: 'TODO: change to map'
        type: boolean
        x-go-name: Exists
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      project_id:
        type: string
        x-go-name: ProjectID
      title:
        type: string
        x-go-name: Title
      translation_ids:
        items:
          type: string
        type: array
        x-go-name: TranslationIDs
      translations:
        additionalProperties:
          $ref: '#/definitions/ExtendedTranslation'
        type: object
        x-go-name: Translations
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  Change:
    description: Change stores information about a changed item
    properties:
      from:
        type: object
        x-go-name: From
      path:
        items:
          type: string
        type: array
        x-go-name: Path
      to:
        type: object
        x-go-name: To
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/r3labs/diff/v2
  Changelog:
    description: Changelog stores a list of changed items
    items:
      $ref: '#/definitions/Change'
    type: array
    x-go-package: github.com/r3labs/diff/v2
  CreateSnapshotInput:
    properties:
      description:
        maxLength: 300
        minLength: 3
        type: string
      project_id:
        maxLength: 36
        minLength: 3
        type: string
      tag:
        maxLength: 36
        minLength: 3
        pattern: ^[a-zA-Z0-9-_.]{3,36}$
        type: string
    required:
    - project_id
    - tag
    type: object
  CreatorSource:
    type: string
    x-go-package: github.com/runar-rkmedia/skiver/types
  DeleteInput:
    properties:
      expiryDate:
        description: |
          Time of which the item at the earliest can be permanently deleted.
        format: date-time
        type: string
        x-nullable: true
      undelete:
        description: If set, will bring the item back from the deletion-queue.
        type: boolean
    type: object
  DiffResponse:
    properties:
      a:
        $ref: '#/definitions/itemStats'
      b:
        $ref: '#/definitions/itemStats'
      diff:
        $ref: '#/definitions/Changelog'
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/handlers
  DiffSnapshotInput:
    properties:
      a:
        $ref: '#/definitions/snapshotSelector'
      b:
        $ref: '#/definitions/snapshotSelector'
      format:
        enum:
        - raw
        - i18n
        - typescript
        type: string
    required:
    - a
    - b
    type: object
  Entity:
    properties:
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  Error:
    properties:
      code:
        $ref: '#/definitions/ErrorCodes'
      error:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/requestContext
  ErrorCodes:
    type: string
    x-go-package: github.com/runar-rkmedia/skiver/requestContext
  ExtendedCategory:
    properties:
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      exists:
        description: 'TODO: change to map'
        type: boolean
        x-go-name: Exists
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      project_id:
        type: string
        x-go-name: ProjectID
      title:
        type: string
        x-go-name: Title
      translation_ids:
        items:
          type: string
        type: array
        x-go-name: TranslationIDs
      translations:
        additionalProperties:
          $ref: '#/definitions/ExtendedTranslation'
        type: object
        x-go-name: Translations
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ExtendedProject:
    properties:
      categories:
        additionalProperties:
          $ref: '#/definitions/ExtendedCategory'
        type: object
        x-go-name: Categories
      category_ids:
        items:
          type: string
        type: array
        x-go-name: CategoryIDs
      category_tree:
        $ref: '#/definitions/CategoryTreeNode'
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      exists:
        type: boolean
        x-go-name: Exists
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      included_tags:
        items:
          type: string
        type: array
        x-go-name: IncludedTags
      locales:
        additionalProperties:
          $ref: '#/definitions/Locale'
        type: object
        x-go-name: Locales
      short_name:
        type: string
        x-go-name: ShortName
      snapshots:
        additionalProperties:
          $ref: '#/definitions/ProjectSnapshotMeta'
        type: object
        x-go-name: Snapshots
      title:
        type: string
        x-go-name: Title
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ExtendedTranslation:
    properties:
      aliases:
        items:
          type: string
        type: array
        x-go-name: Aliases
      category:
        type: string
        x-go-name: CategoryID
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      exists:
        type: boolean
        x-go-name: Exists
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      parent_translation:
        type: string
        x-go-name: ParentTranslationID
      tags:
        items:
          type: string
        type: array
        x-go-name: Tag
      title:
        type: string
        x-go-name: Title
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
      value_ids:
        items:
          type: string
        type: array
        x-go-name: ValueIDs
      values:
        additionalProperties:
          $ref: '#/definitions/TranslationValue'
        type: object
        x-go-name: Values
      variables:
        additionalProperties:
          type: object
        type: object
        x-go-name: Variables
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ImportInput:
    additionalProperties: true
    type: object
  JoinInput:
    allOf:
    - $ref: '#/definitions/LoginInput'
  Locale:
    description: |-
      # See https://en.wikipedia.org/wiki/Language_code for more information
      TODO: consider supporting other standards here, like Windows(?), which seem to have their own thing.
    properties:
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      fallbacks:
        description: List of other Locales in preferred order for fallbacks
        items:
          type: string
        type: array
        x-go-name: Fallbacks
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      ietf:
        description: Represents the IETF language tag, e.g. en / en-US
        type: string
        x-go-name: IETF
      iso_639_1:
        description: Represents the ISO-639-1 string, e.g. en
        type: string
        x-go-name: Iso639_1
      iso_639_2:
        description: Represents the ISO-639-2 string, e.g. eng
        type: string
        x-go-name: Iso639_2
      iso_639_3:
        description: Represents the ISO-639-3 string, e.g. eng
        type: string
        x-go-name: Iso639_3
      title:
        type: string
        x-go-name: Title
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  LocaleInput:
    properties:
      ietf_tag:
        description: List of other Locales in preferred order for fallbacks
        maxLength: 12
        minLength: 2
        type: string
      iso639_1:
        maxLength: 2
        minLength: 2
        type: string
      iso639_2:
        maxLength: 3
        minLength: 3
        type: string
      iso639_3:
        maxLength: 3
        minLength: 3
        type: string
      title:
        maxLength: 300
        minLength: 3
        type: string
    required:
    - iso639_1
    - iso639_2
    - iso639_3
    - ietf_tag
    - title
    type: object
  LocaleSetting:
    properties:
      auto_translation:
        description: |-
          If set, will allow registered translation-services to translate from other languages to this locale.
          This might help speed up translations for new locales.
          See the Config or Organization-settings for instructions on how to set up translation-services.

          Organization-settings are not yet available.

          TODO: implement organization-settings
        type: boolean
        x-go-name: AutoTranslation
      enabled:
        description: If set, the locale will be visible for editing.
        type: boolean
        x-go-name: Enabled
      publish:
        description: |-
          If set, the associated translations will be published in releases.
          This is useful for when adding new locales, and one don't want to publish it to users until it is complete
        type: boolean
        x-go-name: Publish
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  LocaleSettingInput:
    properties:
      auto_translation:
        description: |-
          If set, will allow registered translation-services to translate from other languages to this locale.
          This might help speed up translations for new locales.
          See the Config or Organization-settings for instructions on how to set up translation-services.

          Organization-settings are not yet available.

          TODO: implement organization-settings
        type: boolean
      enabled:
        description: If set, the locale will be visible for editing.
        type: boolean
      publish:
        description: |-
          If set, the associated translations will be published in releases.
          This is useful for when adding new locales, and one don't want to publish it to users until it is complete
        type: boolean
    type: object
  LoginInput:
    properties:
      password:
        maxLength: 400
        minLength: 3
        type: string
      username:
        example: abc123
        maxLength: 100
        minLength: 3
        pattern: ^[^\s]*$
        type: string
    required:
    - username
    - password
    type: object
  LoginResponse:
    properties:
      active:
        description: If not active, the account cannot be used until any issues are
          resolved.
        type: boolean
        x-go-name: Active
      can_create_locales:
        type: boolean
        x-go-name: CanCreateLocales
      can_create_organization:
        type: boolean
        x-go-name: CanCreateOrganization
      can_create_projects:
        type: boolean
        x-go-name: CanCreateProjects
      can_create_translations:
        type: boolean
        x-go-name: CanCreateTranslations
      can_create_users:
        type: boolean
        x-go-name: CanCreateUsers
      can_manage_snapshots:
        type: boolean
        x-go-name: CanManageSnapshots
      can_update_locales:
        type: boolean
        x-go-name: CanUpdateLocales
      can_update_organization:
        type: boolean
        x-go-name: CanUpdateOrganization
      can_update_projects:
        type: boolean
        x-go-name: CanUpdateProjects
      can_update_translations:
        type: boolean
        x-go-name: CanUpdateTranslations
      can_update_users:
        type: boolean
        x-go-name: CanUpdateUsers
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      expires:
        format: date-time
        type: string
        x-go-name: Expires
      expires_in:
        type: string
        x-go-name: ExpiresIn
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      ok:
        type: boolean
        x-go-name: Ok
      organization:
        $ref: '#/definitions/Organization'
      temporary_password:
        description: If set, the user must change the password before the account
          can be used
        type: boolean
        x-go-name: TemporaryPassword
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
      username:
        type: string
        x-go-name: UserName
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  LogoutResponse:
    properties:
      ok:
        type: boolean
    required:
    - ok
    type: object
  MissingTranslation:
    properties:
      category:
        description: The reported category (may not exist), as reported by the client.
        type: string
        x-go-name: Category
      category_id:
        type: string
        x-go-name: CategoryID
      count:
        description: Number of times it has been reported.
        format: int64
        type: integer
        x-go-name: Count
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      first_user_agent:
        type: string
        x-go-name: FirstUserAgent
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      latest_user_agent:
        type: string
        x-go-name: LatestUserAgent
      locale:
        description: The reported locale (may not exist), as reported by the client.
        type: string
        x-go-name: Locale
      locale_id:
        type: string
        x-go-name: LocaleID
      project:
        description: The reported project (may not exist), as reported by the client.
        type: string
        x-go-name: Project
      project_id:
        type: string
        x-go-name: ProjectID
      translation:
        description: The reported translation (may not exist), as reported by the
          client.
        type: string
        x-go-name: Translation
      translation_id:
        type: string
        x-go-name: TranslationID
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  Organization:
    properties:
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        type: string
        x-go-name: CreatedBy
      deleted:
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      id:
        type: string
        x-go-name: ID
      join_id:
        description: |-
          This will allow anybody with the id to create a standard user, and join the organization
          The first user to join, gets priviliges to administer the organization.
        type: string
        x-go-name: JoinID
      join_id_expires:
        format: date-time
        type: string
        x-go-name: JoinIDExpires
      title:
        type: string
        x-go-name: Title
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        type: string
        x-go-name: UpdatedBy
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  OrganizationInput:
    properties:
      title:
        maxLength: 300
        minLength: 3
        type: string
    required:
    - title
    type: object
  Project:
    properties:
      category_ids:
        items:
          type: string
        type: array
        x-go-name: CategoryIDs
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      included_tags:
        items:
          type: string
        type: array
        x-go-name: IncludedTags
      locales:
        additionalProperties:
          $ref: '#/definitions/LocaleSetting'
        type: object
        x-go-name: LocaleIDs
      short_name:
        type: string
        x-go-name: ShortName
      snapshots:
        additionalProperties:
          $ref: '#/definitions/ProjectSnapshotMeta'
        type: object
        x-go-name: Snapshots
      title:
        type: string
        x-go-name: Title
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ProjectInput:
    properties:
      description:
        maxLength: 8000
        minLength: 1
        type: string
      locales:
        additionalProperties:
          $ref: '#/definitions/LocaleSetting'
        type: object
      short_name:
        maxLength: 20
        minLength: 1
        pattern: ^[a-z1-9]*$
        type: string
      title:
        maxLength: 400
        minLength: 1
        type: string
    required:
    - title
    - short_name
    type: object
  ProjectSnapshot:
    properties:
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      project:
        $ref: '#/definitions/ExtendedProject'
      project_hash:
        format: uint64
        type: integer
        x-go-name: ProjectHash
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ProjectSnapshotMeta:
    properties:
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        type: string
        x-go-name: CreatedBy
      description:
        type: string
        x-go-name: Description
      hash:
        format: uint64
        type: integer
        x-go-name: Hash
      id:
        type: string
        x-go-name: SnapshotID
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ReportMissingInput:
    additionalProperties:
      type: string
    type: object
  ServerInfo:
    properties:
      build_date:
        description: Date of build
        format: date-time
        type: string
        x-go-name: BuildDate
      database_size:
        description: Size of database.
        format: int64
        type: integer
        x-go-name: DatabaseSize
      database_size_str:
        type: string
        x-go-name: DatabaseSizeStr
      git_hash:
        description: Short githash for current commit
        type: string
        x-go-name: GitHash
      server_started_at:
        description: When the server was started
        format: date-time
        type: string
        x-go-name: ServerStartedAt
      version:
        description: Version-number for commit
        type: string
        x-go-name: Version
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  Translation:
    properties:
      aliases:
        items:
          type: string
        type: array
        x-go-name: Aliases
      category:
        type: string
        x-go-name: CategoryID
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      parent_translation:
        type: string
        x-go-name: ParentTranslationID
      tags:
        items:
          type: string
        type: array
        x-go-name: Tag
      title:
        type: string
        x-go-name: Title
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
      value_ids:
        items:
          type: string
        type: array
        x-go-name: ValueIDs
      variables:
        additionalProperties:
          type: object
        type: object
        x-go-name: Variables
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  TranslationInput:
    properties:
      category_id:
        maxLength: 100
        minLength: 3
        type: string
      description:
        maxLength: 8000
        minLength: 1
        type: string
      key:
        maxLength: 400
        minLength: 1
        pattern: ^[^\s]*$
        type: string
      title:
        maxLength: 400
        minLength: 1
        type: string
      variables:
        additionalProperties:
          type: object
        description: key/value type. The value can be any type, but the key must a
          string.
        type: object
    required:
    - category_id
    - key
    type: object
  TranslationValue:
    properties:
      context:
        additionalProperties:
          type: string
        type: object
        x-go-name: Context
      created_at:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      locale_id:
        description: locale ID
        type: string
        x-go-name: LocaleID
      source:
        $ref: '#/definitions/CreatorSource'
      translation_id:
        description: Translation ID
        type: string
        x-go-name: TranslationID
      updated_at:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updated_by:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
      value:
        description: The pre-interpolated value to use  with translations
        example: The {{productName}} fires up to {{count}} bullets of {{subject}}.
        type: string
        x-go-name: Value
    required:
    - created_at
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  TranslationValueInput:
    properties:
      context_key:
        description: If set, it will add/update the context for that key instead of
          the original value
        maxLength: 100
        minLength: 1
        pattern: ^[^\s]*$
        type: string
      locale_id:
        maxLength: 100
        minLength: 1
        type: string
      translation_id:
        maxLength: 100
        minLength: 1
        type: string
      value:
        maxLength: 8000
        minLength: 0
        type: string
    required:
    - translation_id
    - locale_id
    type: object
  UpdateProjectInput:
    properties:
      description:
        maxLength: 8000
        minLength: 1
        type: string
      id:
        maxLength: 36
        minLength: 3
        type: string
      locales:
        additionalProperties:
          $ref: '#/definitions/LocaleSettingInput'
        type: object
      short_name:
        maxLength: 20
        minLength: 1
        pattern: ^[a-z1-9]*$
        type: string
      title:
        maxLength: 400
        minLength: 1
        type: string
    required:
    - id
    type: object
  UpdateTranslationInput:
    properties:
      description:
        maxLength: 8000
        minLength: 0
        type: string
      id:
        maxLength: 36
        minLength: 3
        type: string
      title:
        maxLength: 300
        minLength: 0
        type: string
      variables:
        additionalProperties: true
        type: object
    required:
    - id
    type: object
  UpdateTranslationValueInput:
    properties:
      context_key:
        description: If set, it will add/update the context for that key instead of
          the original value
        maxLength: 100
        minLength: 1
        pattern: ^[^\s]*$
        type: string
      id:
        maxLength: 36
        minLength: 3
        type: string
      value:
        maxLength: 8000
        minLength: 0
        type: string
    required:
    - id
    type: object
  itemStats:
    properties:
      hash:
        type: string
        x-go-name: Hash
      identi_hash:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: IdentiHash
      project_id:
        type: string
        x-go-name: ProjectID
      size:
        format: uint64
        type: integer
        x-go-name: Size
      tag:
        type: string
        x-go-name: Tag
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/handlers
  snapshotSelector:
    properties:
      project_id:
        maxLength: 36
        type: string
      tag:
        maxLength: 36
        type: string
    required:
    - project_id
    type: object
host: localhost:8756
info:
  description: |
    Api fo Skiver-api. <a href="https://insomnia.rest/run/?label=&uri=http://localhost:8756/api/swagger.yml" target="_blank"><img src="https://insomnia.rest/images/run.svg" alt="Run in Insomnia"></a>
    # About formatting
    This api produces output in json, yaml and toml. Every api-route takes parameters for controlling which content-type should be produced.
    In General, you can control this with these parameters:

      - `Accept`-header
      - Appending `.json`/`.yaml`/`.toml` to the path (not all routes supports this.)
      - `out_format`-query-parameter
      - `Content-Type`-header
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: Skiver API.
  version: 0.0.1
paths:
  /category/:
    get:
      operationId: getcategory
      responses:
        "200":
          $ref: '#/responses/CategoryResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List categories
      tags:
      - category
    post:
      operationId: createCategory
      responses:
        "200":
          $ref: '#/responses/CategoryResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new category
      tags:
      - category
  /export/:
    get:
      description: |
        For caching in browsers, proxy caching services etc. to work consistenly with parameters, the `?`-prefix for the query-parameters should be removed.
        Note that by default, output-maps are flattened when requesting only a single project/locale. Set the parameter `no_flatten` to override.
      operationId: getExport
      parameters:
      - description: |
          The parameter can be any of the Project's ID or ShortName.
          The short-alias for this parameter is: `p`
        in: query
        name: project
        type: string
      - description: |
          Used to set the export-format.
          ### `i18n`
          The output is formatted to be i18n-compliant.
          ### `raw`
          The output is not converted, and all data is outputted.
          ### `typescript`
          Outputs a typescript-object-map of translation-keys for use with translation-libraries. Information is inclued in the TSDOC for each key.
          The short-alias for this parameter is: `f`
        enum:
        - raw
        - typescript
        - i18n
        in: query
        name: format
        type: string
      - description: |
          Disables flattening of the outputet map
        in: query
        name: no_flatten
        type: boolean
      - description: |
          Used to set which key in output for the locale that should be used.
          The parameter can be any of the Locale's ID, iso639_1, iso639_2, iso639_3, or ietf_tag.
          The short-alias for this parameter is: `p`
        in: query
        name: locale_key
        type: string
      - description: |
          The parameter can be any of the Locale's ID, iso639_1, iso639_2, iso639_3, or ietf_tag.
          By leaving out the parameters, all locales will be returned.
          The short-alias for this parameter is: `l`
          **Future: By setting `locale_id=auto`, the server will infer the locale from the browsers headers.**
        in: query
        name: locale
        type: string
      responses:
        "200":
          description: key-value i18n-type response.
          schema:
            type: object
        "404":
          $ref: '#/responses/apiError'
        "500":
          $ref: '#/responses/apiError'
      summary: Returnes a snapshot of the set of translations.
      tags:
      - export
  /import/{kind}/{project}/{locale}:
    post:
      operationId: importTranslations
      parameters:
      - description: |
          The format of the imported object.
          If set to auto, the server will attempt to find the format for you.
        enum:
        - i18n
        - auto
        in: path
        name: kind
        required: true
        type: string
      - description: |
          If set, a dry-run will occur, and the result is returned.
        in: query
        name: dry
        type: boolean
      - description: |
          The parameter can be any of the Project's ID or ShortName.
        in: path
        name: project
        required: true
        type: string
      - description: |
          The parameter can be any of the Locale's ID, iso639_1, iso639_2, iso639_3, or ietf_tag.
        in: path
        name: locale
        required: true
        type: string
      - in: body
        name: ImportInput
        schema:
          $ref: '#/definitions/ImportInput'
      responses:
        "200":
          description: ""
          schema:
            type: object
        "500":
          $ref: '#/responses/apiError'
      summary: Import translations
      tags:
      - import
  /join/{id}:
    get:
      operationId: getOrgByJoinID
      parameters:
      - description: |
          The join-id.
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/OrganizationResponse'
        "404":
          $ref: '#/responses/apiError'
        "500":
          $ref: '#/responses/apiError'
      summary: Check if a join-id is valid.
      tags:
      - organization
    post:
      operationId: joinOrganiztaion
      parameters:
      - description: |
          The join-id.
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: JoinInput
        required: true
        schema:
          $ref: '#/definitions/JoinInput'
      responses:
        "200":
          $ref: '#/responses/JoinResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Join organization
      tags:
      - organization
  /locale/:
    get:
      operationId: getLocale
      responses:
        "200":
          $ref: '#/responses/LocalesResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List locales
      tags:
      - locale
    post:
      operationId: listLocale
      parameters:
      - in: body
        name: LocaleInput
        required: true
        schema:
          $ref: '#/definitions/LocaleInput'
      responses:
        "200":
          $ref: '#/responses/localeResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a locale
      tags:
      - locale
  /login/:
    get:
      description: Returns information about the logged in user
      operationId: getLogin
      responses:
        "200":
          $ref: '#/responses/loginResponse'
        "403":
          $ref: '#/responses/apiError'
        "500":
          $ref: '#/responses/apiError'
      summary: Get login-information
      tags:
      - auth
    post:
      description: Login to aquire a token, set in a cookie
      operationId: login
      parameters:
      - in: body
        name: LoginInput
        required: true
        schema:
          $ref: '#/definitions/LoginInput'
      responses:
        "200":
          $ref: '#/responses/loginResponse'
        "500":
          $ref: '#/responses/apiError'
      security: []
      summary: Login
      tags:
      - auth
  /logout/:
    post:
      description: Logs out the current user.
      operationId: logout
      responses:
        "200":
          $ref: '#/responses/logoutResponse'
        "403":
          $ref: '#/responses/apiError'
        "500":
          $ref: '#/responses/apiError'
      summary: Logout
      tags:
      - auth
  /missing/{locale}/{project}:
    post:
      operationId: reportMissing
      parameters:
      - description: |
          The parameter can be any of the Project's ID or ShortName.
        in: path
        name: project
        required: true
        type: string
      - description: |
          The parameter can be any of the Locale's ID, iso639_1, iso639_2, iso639_3, or ietf_tag.
        in: path
        name: locale
        required: true
        type: string
      - in: body
        name: ReportMissingInput
        schema:
          $ref: '#/definitions/ReportMissingInput'
      responses:
        "200":
          description: ""
          schema:
            type: object
        "500":
          $ref: '#/responses/apiError'
      summary: Missing translations reported by users
      tags:
      - translation
  /organization/:
    get:
      operationId: getOrganizations
      responses:
        "200":
          $ref: '#/responses/OrganizationsResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List organizations
      tags:
      - organization
    post:
      operationId: createOrganization
      parameters:
      - in: body
        name: OrganizationInput
        required: true
        schema:
          $ref: '#/definitions/OrganizationInput'
      responses:
        "200":
          $ref: '#/responses/OrganizationResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new organization
      tags:
      - organization
  /project/:
    get:
      operationId: getProject
      responses:
        "200":
          $ref: '#/responses/ProjectsResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List projects
      tags:
      - project
    post:
      operationId: createProject
      responses:
        "200":
          $ref: '#/responses/ProjectResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new project
      tags:
      - project
    put:
      operationId: updateProject
      parameters:
      - in: body
        name: UpdateProject
        required: true
        schema:
          $ref: '#/definitions/UpdateProjectInput'
      responses:
        "200":
          $ref: '#/responses/ProjectResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Update a project, including its settings
      tags:
      - project
  /project/snapshot:
    post:
      description: |
        Snapshots serve as a static reference in time as to how a project ands it's exports was at a point in time.
        These are used to keep releases of project-translations stable and to not include ongoing changes to translations.
      operationId: createSnapshot
      parameters:
      - in: body
        name: SnapshotInput
        schema:
          $ref: '#/definitions/CreateSnapshotInput'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/responses/SnapshotResponse'
        "400":
          $ref: '#/responses/apiError'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a snapshot of a project, as well as its exported i18n.
      tags:
      - project
      - i18n
  /project/snapshotdiff/:
    post:
      operationId: diffSnapshots
      parameters:
      - in: body
        name: SnapshotInput
        schema:
          $ref: '#/definitions/DiffSnapshotInput'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/responses/DiffResponse'
        "400":
          $ref: '#/responses/apiError'
        "500":
          $ref: '#/responses/apiError'
      summary: Returns a diff of two snapshots
      tags:
      - project
      - i18n
  /serverInfo/:
    get:
      operationId: getServerInfo
      responses:
        "200":
          $ref: '#/responses/serverInfo'
        "500":
          $ref: '#/responses/apiError'
      summary: Information about the server
      tags:
      - server
  /translation/:
    get:
      operationId: getTranslation
      responses:
        "200":
          $ref: '#/responses/TranslationsResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List translations
      tags:
      - translation
    post:
      operationId: createTranslation
      parameters:
      - in: body
        name: TranslationInput
        required: true
        schema:
          $ref: '#/definitions/TranslationInput'
      responses:
        "200":
          $ref: '#/responses/TranslationResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new translation
      tags:
      - translation
    put:
      operationId: updateTranslation
      parameters:
      - in: body
        name: TranslationUpdateInput
        required: true
        schema:
          $ref: '#/definitions/UpdateTranslationInput'
      responses:
        "200":
          $ref: '#/responses/TranslationResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Update a  translation
      tags:
      - translation
  /translation/{id}:
    delete:
      operationId: deleteTranslation
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: body
        name: DeleteInput
        schema:
          $ref: '#/definitions/DeleteInput'
      responses:
        "200":
          $ref: '#/responses/TranslationsResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Delete translation
      tags:
      - translation
  /translationValue/:
    get:
      operationId: getTranslationValue
      responses:
        "200":
          $ref: '#/responses/TranslationValuesResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List translation-values
      tags:
      - translationValue
    put:
      operationId: updateTranslationValue
      parameters:
      - in: body
        name: UpdateTranslationValueInput
        required: true
        schema:
          $ref: '#/definitions/UpdateTranslationValueInput'
      responses:
        "200":
          $ref: '#/responses/TranslationValueResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Update a new translation-value for a locale
      tags:
      - translationValue
produces:
- application/json
- text/vnd.yaml
- application/toml
responses:
  CategoriesResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Category'
      type: array
  CategoryResponse:
    description: ""
    schema:
      $ref: '#/definitions/Category'
      type: object
  DiffResponse:
    description: ""
    schema:
      $ref: '#/definitions/DiffResponse'
  JoinResponse:
    description: ""
    schema:
      $ref: '#/definitions/LoginResponse'
      type: object
  LocalesResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Locale'
      type: array
  OrganizationResponse:
    description: ""
    schema:
      $ref: '#/definitions/Organization'
      type: object
  OrganizationsResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Organization'
      type: array
  ProjectResponse:
    description: ""
    schema:
      $ref: '#/definitions/Project'
      type: object
  ProjectsResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Project'
      type: array
  SnapshotResponse:
    description: ""
    schema:
      $ref: '#/definitions/ProjectSnapshot'
      type: object
  SnapshotsResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/ProjectSnapshot'
        type: object
      type: array
  TranslationResponse:
    description: ""
    schema:
      $ref: '#/definitions/Translation'
      type: object
  TranslationValueResponse:
    description: ""
    schema:
      $ref: '#/definitions/TranslationValue'
      type: object
  TranslationValuesResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/TranslationValue'
      type: array
  TranslationsResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Translation'
      type: array
  apiError:
    description: ""
    schema:
      $ref: '#/definitions/APIError'
  localeResponse:
    description: Locale represents a language, dialect etc.
    schema:
      $ref: '#/definitions/Locale'
  loginResponse:
    description: Locale represents a language, dialect etc.
    schema:
      $ref: '#/definitions/LoginResponse'
      type: object
  logoutResponse:
    description: ""
    schema:
      $ref: '#/definitions/LogoutResponse'
      type: object
  serverInfo:
    description: Server info
    schema:
      items:
        $ref: '#/definitions/ServerInfo'
      type: array
  translationValueResponse:
    description: TranslationValue is the direct translated value of a TranslationKey
      for a Locale
    schema:
      $ref: '#/definitions/TranslationValue'
schemes:
- http
security:
- cookieAuth: []
swagger: "2.0"
tags:
- description: More or less like a folder
  name: project
- description: Language-like
  name: locale
- description: The specific translation of some key
  name: translation
- description: Authentication and Authorization
  name: auth
