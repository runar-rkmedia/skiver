basePath: /api
consumes:
- application/json
- text/vnd.yaml
- application/toml
definitions:
  APIError:
    properties:
      code:
        $ref: '#/definitions/ErrorCodes'
      details:
        type: object
        x-go-name: Details
      error:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/requestContext
  Category:
    properties:
      createdAt:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      createdBy:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      project_id:
        type: string
        x-go-name: ProjectID
      title:
        type: string
        x-go-name: Title
      updatedAt:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updatedBy:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - createdAt
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  CategoryInput:
    properties:
      description:
        maxLength: 8000
        minLength: 3
        type: string
      key:
        maxLength: 100
        minLength: 1
        type: string
      project_id:
        maxLength: 100
        minLength: 1
        type: string
      title:
        maxLength: 400
        minLength: 3
        type: string
    required:
    - key
    - project_id
    - title
    type: object
  Entity:
    properties:
      createdAt:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      createdBy:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      updatedAt:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updatedBy:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - createdAt
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ErrorCodes:
    type: string
    x-go-package: github.com/runar-rkmedia/skiver/requestContext
  Locale:
    description: |-
      # See https://en.wikipedia.org/wiki/Language_code for more information
      TODO: consider supporting other standards here, like Windows(?), which seem to have their own thing.
    properties:
      createdAt:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      createdBy:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      fallbacks:
        description: List of other Locales in preferred order for fallbacks
        items:
          type: string
        type: array
        x-go-name: Fallbacks
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      ietf:
        description: Represents the IETF language tag, e.g. en / en-US
        type: string
        x-go-name: IETF
      iso_639_1:
        description: Represents the ISO-639-1 string, e.g. en
        type: string
        x-go-name: Iso639_1
      iso_639_2:
        description: Represents the ISO-639-2 string, e.g. eng
        type: string
        x-go-name: Iso639_2
      iso_639_3:
        description: Represents the ISO-639-3 string, e.g. eng
        type: string
        x-go-name: Iso639_3
      title:
        type: string
        x-go-name: Title
      updatedAt:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updatedBy:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - createdAt
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  LocaleInput:
    properties:
      ietf_tag:
        description: List of other Locales in preferred order for fallbacks
        maxLength: 12
        minLength: 2
        type: string
      iso639_1:
        maxLength: 2
        minLength: 2
        type: string
      iso639_2:
        maxLength: 3
        minLength: 3
        type: string
      iso639_3:
        maxLength: 3
        minLength: 3
        type: string
      title:
        maxLength: 300
        minLength: 3
        type: string
    required:
    - iso639_1
    - iso639_2
    - iso639_3
    - ietf_tag
    - title
    type: object
  LoginInput:
    properties:
      password:
        maxLength: 400
        minLength: 3
        type: string
      username:
        example: abc123
        maxLength: 100
        minLength: 3
        pattern: ^[^\s]*$
        type: string
    required:
    - username
    - password
    type: object
  LoginResponse:
    properties:
      Active:
        description: If not active, the account cannot be used until any issues are
          resolved.
        type: boolean
      createdAt:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      createdBy:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      expires:
        format: date-time
        type: string
        x-go-name: Expires
      expires_in:
        type: string
        x-go-name: ExpiresIn
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      ok:
        type: boolean
        x-go-name: Ok
      temporary_password:
        description: If set, the user must change the password before the account
          can be used
        type: boolean
        x-go-name: TemporaryPassword
      updatedAt:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updatedBy:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
      userName:
        type: string
        x-go-name: UserName
    required:
    - createdAt
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  Project:
    properties:
      category_ids:
        items:
          type: string
        type: array
        x-go-name: CategoryIDs
      createdAt:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      createdBy:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      included_tags:
        items:
          type: string
        type: array
        x-go-name: IncludedTags
      title:
        type: string
        x-go-name: Title
      updatedAt:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updatedBy:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
    required:
    - createdAt
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  ProjectInput:
    properties:
      description:
        maxLength: 8000
        minLength: 1
        type: string
      title:
        maxLength: 400
        minLength: 1
        type: string
    required:
    - title
    type: object
  ServerInfo:
    properties:
      BuildDate:
        description: Date of build
        format: date-time
        type: string
      DatabaseSize:
        description: Size of database.
        format: int64
        type: integer
      DatabaseSizeStr:
        type: string
      GitHash:
        description: Short githash for current commit
        type: string
      ServerStartedAt:
        description: When the server was started
        format: date-time
        type: string
      Version:
        description: Version-number for commit
        type: string
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  Translation:
    properties:
      aliases:
        items:
          type: string
        type: array
        x-go-name: Aliases
      category:
        type: string
        x-go-name: CategoryID
      context:
        type: string
        x-go-name: Context
      createdAt:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      createdBy:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        type: string
        x-go-name: Description
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      parent_translation:
        type: string
        x-go-name: ParentTranslationID
      tags:
        items:
          type: string
        type: array
        x-go-name: Tag
      title:
        type: string
        x-go-name: Title
      updatedAt:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updatedBy:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
      variables:
        additionalProperties:
          type: object
        type: object
        x-go-name: Variables
    required:
    - createdAt
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  TranslationInput:
    properties:
      category_id:
        maxLength: 100
        minLength: 3
        type: string
      context:
        maxLength: 400
        minLength: 1
        type: string
      description:
        maxLength: 8000
        minLength: 1
        type: string
      key:
        maxLength: 400
        minLength: 1
        type: string
      title:
        maxLength: 400
        minLength: 1
        type: string
    required:
    - category_id
    - key
    type: object
  TranslationValue:
    properties:
      createdAt:
        description: Time of which the entity was created in the database
        format: date-time
        type: string
        x-go-name: CreatedAt
      createdBy:
        description: User id refering to the user who created the item
        type: string
        x-go-name: CreatedBy
      deleted:
        description: |-
          If set, the item is considered deleted. The item will normally not get deleted from the database,
          but it may if cleanup is required.
        format: date-time
        type: string
        x-go-name: Deleted
      id:
        description: Unique identifier of the entity
        type: string
        x-go-name: ID
      locale_id:
        description: locale ID
        type: string
        x-go-name: LocaleID
      translation_id:
        description: Translation ID
        type: string
        x-go-name: TranslationID
      updatedAt:
        description: Time of which the entity was updated, if any
        format: date-time
        type: string
        x-go-name: UpdatedAt
      updatedBy:
        description: User id refering to who created the item
        type: string
        x-go-name: UpdatedBy
      value:
        description: The pre-interpolated value to use  with translations
        example: The {{productName}} fires up to {{count}} bullets of {{subject}}.
        type: string
        x-go-name: Value
    required:
    - createdAt
    - id
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/types
  TranslationValueInput:
    properties:
      locale_id:
        maxLength: 100
        minLength: 1
        type: string
      translation_id:
        maxLength: 100
        minLength: 1
        type: string
      value:
        maxLength: 8000
        minLength: 0
        type: string
    required:
    - translation_id
    - locale_id
    - value
    type: object
host: localhost
info:
  description: |-
    Api fo Skiver-api.
    <a href="https://insomnia.rest/run/?label=&uri=" target="_blank"><img src="https://insomnia.rest/images/run.svg" alt="Run in Insomnia"></a>
    Title: "Skiver"
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: Skiver API.
  version: 0.0.1
paths:
  /api/category/:
    get:
      operationId: getcategory
      responses:
        "200":
          $ref: '#/responses/CategoryResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List categories
      tags:
      - category
    post:
      operationId: createCategory
      responses:
        "200":
          $ref: '#/responses/CategoryResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new category
      tags:
      - category
  /api/locale/:
    get:
      operationId: getLocale
      responses:
        "200":
          $ref: '#/responses/LocalesResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List locales
      tags:
      - locale
    post:
      operationId: listLocale
      parameters:
      - in: body
        name: LocaleInput
        required: true
        schema:
          $ref: '#/definitions/LocaleInput'
      responses:
        "200":
          $ref: '#/responses/localeResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a locale
      tags:
      - locale
  /api/login/:
    get:
      description: Returns information about the logged in user
      operationId: getLogin
      responses:
        "200":
          $ref: '#/responses/loginResponse'
        "403":
          $ref: '#/responses/apiError'
        "500":
          $ref: '#/responses/apiError'
      summary: Get login-information
      tags:
      - auth
    post:
      description: Login to aquire a token, set in a cookie
      operationId: login
      parameters:
      - in: body
        name: LoginInput
        required: true
        schema:
          $ref: '#/definitions/LoginInput'
      responses:
        "200":
          $ref: '#/responses/loginResponse'
        "500":
          $ref: '#/responses/apiError'
      security: []
      summary: Login
      tags:
      - auth
  /api/project/:
    get:
      operationId: getProject
      responses:
        "200":
          $ref: '#/responses/ProjectsResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List projects
      tags:
      - project
    post:
      operationId: createProject
      responses:
        "200":
          $ref: '#/responses/ProjectResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new project
      tags:
      - project
  /api/serverInfo/:
    get:
      operationId: getServerInfo
      responses:
        "200":
          $ref: '#/responses/serverInfo'
        "500":
          $ref: '#/responses/apiError'
      summary: Information about the server
      tags:
      - server
  /api/translation-value/:
    get:
      operationId: getTranslationValue
      responses:
        "200":
          $ref: '#/responses/TranslationValuesResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List translation-values
      tags:
      - translationValue
    post:
      operationId: createTranslationValue
      responses:
        "200":
          $ref: '#/responses/TranslationValueResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new translation-value for a locale
      tags:
      - translationValue
  /api/translation/:
    get:
      operationId: getTranslation
      responses:
        "200":
          $ref: '#/responses/TranslationsResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: List translations
      tags:
      - translation
    post:
      operationId: createTranslation
      responses:
        "200":
          $ref: '#/responses/TranslationResponse'
        "500":
          $ref: '#/responses/apiError'
      summary: Create a new translation
      tags:
      - translation
produces:
- application/json
- text/vnd.yaml
- application/toml
responses:
  CategoriesResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Category'
      type: array
  CategoryResponse:
    description: ""
    schema:
      $ref: '#/definitions/Category'
      type: object
  LocalesResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Locale'
      type: array
  ProjectResponse:
    description: ""
    schema:
      $ref: '#/definitions/Project'
      type: object
  ProjectsResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Project'
      type: array
  TranslationResponse:
    description: ""
    schema:
      $ref: '#/definitions/Translation'
      type: object
  TranslationValueResponse:
    description: ""
    schema:
      $ref: '#/definitions/TranslationValue'
      type: object
  TranslationValuesResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/TranslationValue'
      type: array
  TranslationsResponse:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Translation'
      type: array
  apiError:
    description: ""
    schema:
      $ref: '#/definitions/APIError'
  localeResponse:
    description: Locale represents a language, dialect etc.
    schema:
      $ref: '#/definitions/Locale'
  loginResponse:
    description: Locale represents a language, dialect etc.
    schema:
      $ref: '#/definitions/LoginResponse'
      type: object
  serverInfo:
    description: Server info
    schema:
      items:
        $ref: '#/definitions/ServerInfo'
      type: array
  translationValueResponse:
    description: TranslationValue is the direct translated value of a TranslationKey
      for a Locale
    schema:
      $ref: '#/definitions/TranslationValue'
schemes:
- http
security:
- cookieAuth: []
swagger: "2.0"
tags:
- description: More or less like a folder
  name: project
- description: Language-like
  name: locale
- description: The specific translation of some key
  name: translation
- description: Authentication and Authorization
  name: auth
