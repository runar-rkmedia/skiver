basePath: /api
consumes:
- application/json
- text/vnd.yaml
- application/toml
definitions:
  ApiError:
    properties:
      code:
        type: string
        x-go-name: Code
      error:
        type: string
        x-go-name: Error
      details:
        type: object
    type: object
    x-go-package: github.com/runar-rkmedia/skiver/requestContext

  localeResponse:
    type: object
    properties:
      todo: 
        type: boolean
  LocalePayload:
    type: object
    required: 
      - iso639_1
      - iso639_2
      - iso639_3
      - ietf_tag
      - title
    properties:
      title:
        type: string
        minLength: 3
        maxLength: 300
      iso639_1:
        type: string
        minLength: 2
        maxLength: 2
      iso639_2:
        type: string
        minLength: 3
        maxLength: 3
      iso639_3:
        type: string
        minLength: 3
        maxLength: 3
      ietf_tag:
        type: string
        description: List of other Locales in preferred order for fallbacks
        minLength: 2
        maxLength: 12


  LoginPayload:
    properties:
      password:
        maxLength: 400
        minLength: 3
        type: string
        x-go-name: Password
      username:
        example: abc123
        maxLength: 100
        minLength: 3
        pattern: ^[^\s]*$
        type: string
        x-go-name: Username
    type: object
    required:
      - username
      - password
    x-go-package: github.com/runar-rkmedia/skiver/types
host: localhost
info:
  description: |-
    Api fo Skiver-api.
    <a href="https://insomnia.rest/run/?label=&uri=" target="_blank"><img src="https://insomnia.rest/images/run.svg" alt="Run in Insomnia"></a>
    Title: "Skiver"
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: Skiver API.
  version: 0.0.1
paths:
  /api/login/:
    post:
      description: Login to aquire a token
      operationId: login
      responses:
        "200":
          $ref: '#/responses/loginResponse'
        "500":
          $ref: '#/responses/apiError'
      tags:
      - auth
  /api/locale/:
    post:
      description: Create a locale
      operationId: locale
      responses:
        "200":
          $ref: '#/responses/localeResponse'
        "500":
          $ref: '#/responses/apiError'
      tags:
      - auth
produces:
- application/json
- text/vnd.yaml
- application/toml
responses:
  apiError:
    description: "Consistant error-codes"
    schema:
      $ref: '#/definitions/ApiError'
  localeResponse:
    description: "Returns the locale"
    schema:
      $ref: '#/definitions/localeResponse'
  loginResponse:
    description: ""
    schema:
      items:
        # TODO: get the real response
        $ref: '#/definitions/LoginPayload'
      type: array
schemes:
- http
swagger: "2.0"
