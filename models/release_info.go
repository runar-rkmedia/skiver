// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ReleaseInfo release info
//
// swagger:model ReleaseInfo
type ReleaseInfo struct {

	// assets URL
	AssetsURL string `json:"assets_url,omitempty"`

	// body
	Body string `json:"body,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// draft
	Draft bool `json:"draft,omitempty"`

	// HTML URL
	HTMLURL string `json:"html_url,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// prerelease
	Prerelease bool `json:"prerelease,omitempty"`

	// published at
	PublishedAt string `json:"published_at,omitempty"`

	// tag name
	TagName string `json:"tag_name,omitempty"`

	// target commitish
	TargetCommitish string `json:"target_commitish,omitempty"`

	// URL
	URL string `json:"url,omitempty"`

	// upload URL
	UploadURL string `json:"upload_url,omitempty"`
}

// Validate validates this release info
func (m *ReleaseInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this release info based on context it is used
func (m *ReleaseInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReleaseInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReleaseInfo) UnmarshalBinary(b []byte) error {
	var res ReleaseInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
