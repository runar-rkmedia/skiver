// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateOrganizationInput update organization input
//
// swagger:model UpdateOrganizationInput
type UpdateOrganizationInput struct {

	// id
	// Required: true
	// Max Length: 36
	// Min Length: 3
	ID *string `json:"id"`

	// join id
	// Max Length: 100
	// Min Length: 1
	JoinID string `json:"join_id,omitempty"`

	// join id expires
	// Max Length: 100
	// Min Length: 1
	// Format: date-time
	JoinIDExpires *strfmt.DateTime `json:"join_id_expires,omitempty"`
}

// Validate validates this update organization input
func (m *UpdateOrganizationInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJoinID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJoinIDExpires(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateOrganizationInput) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.MinLength("id", "body", *m.ID, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("id", "body", *m.ID, 36); err != nil {
		return err
	}

	return nil
}

func (m *UpdateOrganizationInput) validateJoinID(formats strfmt.Registry) error {
	if swag.IsZero(m.JoinID) { // not required
		return nil
	}

	if err := validate.MinLength("join_id", "body", m.JoinID, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("join_id", "body", m.JoinID, 100); err != nil {
		return err
	}

	return nil
}

func (m *UpdateOrganizationInput) validateJoinIDExpires(formats strfmt.Registry) error {
	if swag.IsZero(m.JoinIDExpires) { // not required
		return nil
	}

	if err := validate.MinLength("join_id_expires", "body", m.JoinIDExpires.String(), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("join_id_expires", "body", m.JoinIDExpires.String(), 100); err != nil {
		return err
	}

	if err := validate.FormatOf("join_id_expires", "body", "date-time", m.JoinIDExpires.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update organization input based on context it is used
func (m *UpdateOrganizationInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateOrganizationInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateOrganizationInput) UnmarshalBinary(b []byte) error {
	var res UpdateOrganizationInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
